apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return "";
    }
}

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId "com.fasteque.playground"
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode 4
        versionName "0.4"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debugLeakCanaryNoOp.initWith(buildTypes.debug)
        debugLeakCanaryNoOp {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        buildTypes.each {
            it.buildConfigField 'String', 'MOVIE_DB_API_KEY', getProps("movieDbApiKey")
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    def appDependencies = globalConfiguration.appDependencies
    def appDebugMinifiedDependencies = globalConfiguration.appDebugMinifiedDependencies
    def appReleaseDependencies = globalConfiguration.appReleaseDependencies

    apt appDependencies.daggerCompiler

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile appDependencies.appCompat
    compile appDependencies.recyclerView
    compile appDependencies.cardView
    compile appDependencies.design
    compile appDependencies.customTabs
    compile appDependencies.retrofit
    compile appDependencies.retrofitAdapterRxJava
    compile appDependencies.retrofitConverterGson
    compile appDependencies.picasso
    compile appDependencies.rxAndroid
    compile appDependencies.rxBinding
    compile appDependencies.butterKnife
    compile appDependencies.dagger
    compile appDependencies.javaxAnnotation

    debugCompile appDependencies.leakCanary
    debugLeakCanaryNoOpCompile appDebugMinifiedDependencies.leakCanaryNoOp
    releaseCompile appReleaseDependencies.leakCanaryNoOp
}

repositories {
    mavenCentral()
}
